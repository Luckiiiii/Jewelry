<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60=" crossorigin="anonymous"></script>
@inject Microsoft.AspNetCore.Identity.UserManager<StoreUser> UserManager
@{
    Layout = "_LayoutAdmin";
}

@model IEnumerable<StoreUser>
<div class="breadcome-area">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="breadcome-list">
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                            <div class="breadcomb-wp">
                                <div class="breadcomb-icon">
                                    <i class="icon nalika-home"></i>
                                </div>
                                <div class="breadcomb-ctn">
                                    <h2>Quản lý tài khoản</h2>
                                    <p>Cửa hàng vàng bạc<span class="bread-ntd">Tuấn Thành</span></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="product-status mg-b-30">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="product-status-wrap">
                    <h4>Products List</h4>
                    <div class="add-product">
                        <a title="Add Users" asp-controller="AdminPage" asp-action="AddUsers">Thêm tài khoản</a>
                    </div>
                    <div class="table-responsive">
                        <!--nanui-->
                        <div class="btn-group">
                            <ul id="export-buttons"></ul>
                        </div>
                        <!--btuun excel pdf-->
                        <table id="AccountTable" class="table">
                            <thead>
                                <tr>
                                    <th class="hidden">ID</th>
                                    <th>Địa chỉ email</th>
                                    <th>Quyền</th>
                                    <th>Họ</th>
                                    <th>Tên</th>
                                    <th>Số điện thoại</th>
                                    <th>Địa chỉ</th>
                                    <th></th>
                                </tr>
                            
                            </thead>
                                <tbody>

                            @foreach (var p in Model)
                            {
                                var user = await UserManager.FindByIdAsync(p.Id);
                                var roles = await UserManager.GetRolesAsync(user);
                                    <tr>
                                        <td class="hidden" data-field="id">@p.Id</td>
                                        <td data-field="email">@p.Email</td>
                                        <td data-field="role">@string.Join(",", roles)</td>
                                        <td class="editable" contenteditable="false" data-field="firstName">@p.FirstName</td>
                                        <td class="editable" contenteditable="false" data-field="lastName">@p.LastName</td>
                                        <td class="editable" contenteditable="false" data-field="phoneNumber">@p.PhoneNumber</td>
                                        <td class="editable" contenteditable="false" data-field="address">@p.Address</td>
                                        <td>
                                            <button data-toggle="tooltip" title="Edit" class="pd-setting-ed edit-btn">
                                                <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                                            </button>
                                            <button data-toggle="tooltip" title="Save" class="pd-setting-ed save-btn" style="display:none;">
                                                <i class="fa fa-floppy-o" aria-hidden="true"></i>
                                            </button>
                                            <button data-toggle="tooltip" title="Trash" class="pd-setting-ed trash-btn">
                                                <i class="fa fa-trash-o" aria-hidden="true"></i>
                                            </button>
                                        </td>
                                    </tr>
                            }
                                </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('.edit-btn').click(function () {
            var $row = $(this).closest('tr');
            $row.find('.editable').prop('contenteditable', true).addClass('editing');
            $row.find('.edit-btn').hide();
            $row.find('.save-btn').show();
        });

        $('.save-btn').click(function () {
            var $row = $(this).closest('tr');
            var userId = $row.find('.hidden[data-field="id"]').text();
            var email = $row.find('td[data-field="email"]').text();
            var firstName = $row.find('.editable[data-field="firstName"]').text();
            var lastName = $row.find('.editable[data-field="lastName"]').text();
            var phoneNumber = $row.find('.editable[data-field="phoneNumber"]').text();
            var address = $row.find('.editable[data-field="address"]').text();
            var errorMessage = "";
          
            if (!firstName) {
                errorMessage = "First name is required.";
            } else if (!lastName) {
                errorMessage = "Last name is required.";
            } else if (!phoneNumber) {
                errorMessage = "Phone number is required.";
            } else if (!/^\d{10}$/.test(phoneNumber)) {
                errorMessage = "Invalid phone number. Please enter a 10-digit number.";
            } else if (!address) {
                errorMessage = "Address is required.";
            } 
            if (errorMessage) {
                alert(errorMessage);
                return; // Dừng quá trình lưu nếu có trường nào đó không hợp lệ
            }
            $.ajax({
                url: '/AdminPage/SaveUser',
                type: 'POST',
                dataType: 'json',
                data: {
                    userId: userId,
                    email: email,
                    firstName: firstName,
                    lastName: lastName,
                    phoneNumber: phoneNumber,
                    address: address
                },
                success: function (response) {
                    console.log('Data saved successfully!');
                    $row.find('.editable').prop('contenteditable', false).removeClass('editing');
                    $row.find('.edit-btn').show();
                    $row.find('.save-btn').hide();
                },
                error: function (error) {
                    console.error('Error saving data:', error);
                }
            });
        });
        $('.trash-btn').click(function () {
            var $row = $(this).closest('tr');
            var userId = $row.find('.hidden[data-field="id"]').text();

            $.ajax({
                url: '/AdminPage/DeleteUser',
                type: 'POST',
                dataType: 'json',
                data: { userId: userId },
                success: function (response) {
                    if (response.success) {
                        $row.remove(); // Xóa hàng khỏi bảng nếu xóa thành công
                    } else {
                        alert('Failed to delete user.'); // Hiển thị thông báo nếu xóa không thành công
                    }
                },
                error: function (error) {
                    console.error('Error deleting user:', error);
                }
            });
        });
        $(document).ready(function () {
            $('#searchButton').click(function () {
                var searchText = $('#searchInput').val();
                $.ajax({
                    url: '/AdminPage/SearchUsers',
                    type: 'GET',
                    data: { searchText: searchText },
                    success: function (response) {
                        // Cập nhật nội dung của bảng với kết quả tìm kiếm
                        $('.product-status-wrap table tbody').html(response);
                    },
                    error: function (error) {
                        console.error('Error searching users:', error);
                    }
                });
            });
        });

    });
    
    // new DataTable('#AccountTable', {
    //     layout: {
    //         topStart: {
    //             buttons: ['copy', 'csv', 'excel', 'pdf', 'print']
    //         }
    //     }
    // });
</script>