@{
    Layout = "_LayoutAdmin";
}
@model IEnumerable<Product>

<div class="breadcome-area">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="breadcome-list">
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                            <div class="breadcomb-wp">
                                <div class="breadcomb-icon">
                                    <i class="icon nalika-home"></i>
                                </div>
                                <div class="breadcomb-ctn">
                                    <h2>Product Management</h2>
                                    <p>Welcome to Jewelry <span class="bread-ntd">Product Management</span></p>
                                </div>
                                <input type="text" id="searchInput" placeholder="Search Product...">
                                <button id="searchButton">Search</button>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                            <div class="breadcomb-report">
                                <button data-toggle="tooltip" data-placement="left" title="Download Report" class="btn"><i class="icon nalika-download"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="product-status mg-b-30">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="product-status-wrap">
                    <h4>Products List</h4>
                    <div class="add-product">
                        <a title="Add Products" asp-controller="AdminPage" asp-action="AddProduct">Add Product</a>
                    </div>
                    <table>
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Category</th>
                            <th>Warranty Information</th>
                            <th>Image</th>
                        </tr>
                        @foreach (var product in Model)
                        {
                            <tr asp-validation-summary="ModelOnly">
                                <td class="editable" contenteditable="false" data-field="name">@product.Name</td>
                                <td data-field="description">@product.Description</td>
                                <td data-field="category">@product.Category.Name</td>
                                <td data-field="warranty">@product.WarrantyInformation</td>
                                <td>
                                    @if (product.Img.Any())
                                    {
                                        <img src="@product.Img.FirstOrDefault()?.UrlImage" alt="Product Image" width="100" height="100" />
                                    }
                                    else
                                    {
                                        <span>No Image Available</span>
                                    }
                                </td>
                                <td class="hidden" data-field="id">@product.Id</td>
                                <td>
                                    <button data-toggle="tooltip" title="Edit" class="pd-setting-ed edit-btn">
                                        <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                                    </button>
                                    <button data-toggle="tooltip" title="Save" class="pd-setting-ed save-btn" style="display:none;">
                                        <i class="fa fa-floppy-o" aria-hidden="true"></i>
                                    </button>
                                    <button data-toggle="tooltip" title="Trash" class="pd-setting-ed trash-btn">
                                        <i class="fa fa-trash-o" aria-hidden="true"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </table>
                    <div class="custom-pagination">
                        <ul class="pagination">
                            @for (int i = 1; i <= @Model.Count() / 5 + 1; i++)
                            {
                                <li class="page-item"><a class="page-link" href="?page=@i">@i</a></li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('.edit-btn').click(function () {
            var $row = $(this).closest('tr');
            $row.find('.editable').prop('contenteditable', true).addClass('editing');
            $row.find('.edit-btn').hide();
            $row.find('.save-btn').show();
        });

        $('.save-btn').click(function () {
            var $row = $(this).closest('tr');
            var productId = $row.find('.hidden[data-field="id"]').text();
            var name = $row.find('.editable[data-field="name"]').text();
            var description = $row.find('td[data-field="description"]').text();
            var category = $row.find('td[data-field="category"]').text();
            var warrantyInformation = $row.find('td[data-field="warranty"]').text();
            var errorMessage = "";
            // Kiểm tra các trường thông tin có hợp lệ không
            if (!name) {
                errorMessage = "Name is required.";
            } else if (!description) {
                errorMessage = "Description is required.";
            } else if (!category) {
                errorMessage = "Category is required.";
            } else if (!warrantyInformation) {
                errorMessage = "Warranty information is required.";
            }
            if (errorMessage) {
                alert(errorMessage);
                return; // Dừng quá trình lưu nếu có trường nào đó không hợp lệ
            }
            $.ajax({
                url: '/AdminPage/SaveProduct',
                type: 'POST',
                dataType: 'json',
                data: {
                    productId: productId,
                    name: name,
                    description: description,
                    category: category,
                    warrantyInformation: warrantyInformation
                },
                success: function (response) {
                    console.log('Data saved successfully!');
                    $row.find('.editable').prop('contenteditable', false).removeClass('editing');
                    $row.find('.edit-btn').show();
                    $row.find('.save-btn').hide();
                },
                error: function (error) {
                    console.error('Error saving data:', error);
                }
            });
        });

        $('.trash-btn').click(function () {
            var $row = $(this).closest('tr');
            var productId = $row.find('.hidden[data-field="id"]').text();

            $.ajax({
                url: '/AdminPage/DeleteProduct',
                type: 'POST',
                dataType: 'json',
                data: { productId: productId },
                success: function (response) {
                    if (response.success) {
                        $row.remove(); // Xóa hàng khỏi bảng nếu xóa thành công
                    } else {
                        alert('Failed to delete product.'); // Hiển thị thông báo nếu xóa không thành công
                    }
                },
                error: function (error) {
                    console.error('Error deleting product:', error);
                }
            });
        });
    });
</script>

