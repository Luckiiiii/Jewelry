{"version":3,"sources":["./src/app/services/authActivator.service.ts","./src/environments/environment.ts","./src/app/services/store.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/productDetail.component.ts","./src/app/pages/loginPage.component.html","./src/app/pages/loginPage.component.ts","./src/app/app.module.ts","./src/app/pages/checkout.component.html","./src/app/pages/checkout.component.ts","./src/app/router/index.ts","./src/app/pages/shopPage.component.ts","./src/app/pages/shopPage.component.html","./src/app/shared/Order.ts","./src/app/views/cartView.component.html","./src/app/views/cartView.component.ts","./src/app/views/productListView.component.html","./src/app/views/productListView.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Store } from \"./store.service\";\r\n\r\n@Injectable()\r\nexport class AuthActivator implements CanActivate {\r\n\r\n    constructor(private store: Store, private router: Router) {\r\n\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot)\r\n        : boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n        if (this.store.loginRequired) {\r\n            this.router.navigate([\"login\"]);\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Product } from \"../shared/Product\";\r\nimport { Order, OrderItem } from \"../shared/Order\";\r\nimport { LoginRequest, LoginResults } from \"../shared/LoginResults\";\r\n\r\n@Injectable()\r\nexport class Store {\r\n    constructor(private http: HttpClient) {\r\n        \r\n    }\r\n    public products: Product[] = [];\r\n    public order: Order = new Order()\r\n    public token = \"\";\r\n    public expiration = new Date();\r\n\r\n    loadProducts(): Observable<void> {\r\n        return this.http.get<[]>(\"/api/products\")\r\n            .pipe(map(data => {\r\n                this.products = data;\r\n                return;\r\n            }));\r\n    }\r\n\r\n    get loginRequired(): boolean {\r\n        return this.token.length === 0 || this.expiration > new Date();\r\n    }\r\n    login(creds: LoginRequest) {\r\n        return this.http.post<LoginResults>(\"/account/createtoken\", creds)\r\n            .pipe(map(data => {\r\n                this.token = data.token;\r\n                this.expiration = data.expiration;\r\n            }));\r\n    }\r\n\r\n    checkout() {\r\n        const headers = new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`);\r\n\r\n        return this.http.post(\"/api/orders\", this.order, {\r\n            headers: headers\r\n        })\r\n            .pipe(map(() => {\r\n                this.order = new Order();\r\n            }));\r\n    }\r\n\r\n    //addToOrder(product: Product) {\r\n    //    let item: OrderItem;\r\n    //    item = this.order.items.find(o => o.productId === product.id);\r\n    //    if (item) {\r\n    //        item.quantity++\r\n    //    }\r\n    //    else {\r\n    //        item = new OrderItem();\r\n    //        item.productId = product.id;\r\n    //        item.productTitle = product.title;\r\n    //        item.productArtId = product.artId\r\n    //        item.productCategory = product.category;\r\n    //        item.unitPrice = product.price;\r\n    //        item.quantity = 1;\r\n    //        this.order.items.push(item);\r\n    //    }\r\n    //}\r\n    decreaseQuantity(orderitem: OrderItem) {\r\n        if (orderitem && orderitem.quantity > 1) {\r\n            orderitem.quantity--;\r\n        }\r\n    }\r\n\r\n    increaseQuantity(orderitem: OrderItem) {\r\n        if (orderitem) {\r\n            orderitem.quantity++;\r\n        }\r\n    }\r\n    decreaseQuantityDetail(product: Product) {\r\n        let item: OrderItem;\r\n        item = this.order.items.find(o => o.productId === product.id);\r\n        if (item && item.quantity > 1) {\r\n            item.quantity--;\r\n        }\r\n    }\r\n    increaseQuantityDetail(product: Product) {\r\n        let item: OrderItem;\r\n        item = this.order.items.find(o => o.productId === product.id);\r\n        if (item) {\r\n            item.quantity++;\r\n        }\r\n    }\r\n\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Shop';\n}\n","<div class=\"row\">\r\n    <div class=\"col-9\">\r\n        <h3>{{ title }}</h3>\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\nimport { Product } from \"../shared/Product\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n    selector: \"product-details\",\r\n    templateUrl: \"productDetail.component.html\",\r\n})\r\nexport default class ProductDetail implements OnInit {\r\n    product: Product;\r\n\r\n    constructor(private route: ActivatedRoute, public store: Store) { }\r\n\r\n    ngOnInit(): void {\r\n        //const productId = +this.route.snapshot.paramMap.get(\"id\");\r\n        //this.product = this.store.products.find(p => p.id === productId);\r\n    }\r\n}","<div class=\"row\">\n  <div class=\"col-md-4 col-md-offset-4\">\n    <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\n    <form (submit)=\"onLogin()\">\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" class=\"form-control\" name=\"name\" #username=\"ngModel\" [(ngModel)]=\"creds.username\" required />\n        <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid && username.errors.required\">Required</div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" class=\"form-control\" #password=\"ngModel\" name=\"password\" [(ngModel)]=\"creds.password\" required />\n        <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid && password.errors.required\">Required</div>\n      </div>\n      <div class=\"form-group\">\n        <input type=\"submit\" class=\"btn btn-success\" value=\"Login\" [disabled]=\"username.invalid || password.invalid\" />\n        <a href=\"#\" class=\"btn btn-default\">Cancel</a>\n      </div>\n    </form>\n    <div>{{ creds | json }}</div>\n  </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { LoginRequest } from \"../shared/LoginResults\";\r\n\r\n@Component({\r\n    selector: \"login-page\",\r\n    templateUrl: \"loginPage.component.html\"\r\n})\r\nexport class LoginPage {\r\n    constructor(public store: Store, private router: Router) { }\r\n\r\n    public creds: LoginRequest = {\r\n        username: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    public errorMessage = \"\";\r\n\r\n    onLogin() {\r\n        this.store.login(this.creds)\r\n            .subscribe(() => {\r\n                //Successfully logged in\r\n                if (this.store.order.items.length > 0) {\r\n                    this.router.navigate([\"checkout\"]);\r\n                } else {\r\n                    this.router.navigate([\"\"]);\r\n                }\r\n            }, error => {\r\n                console.log(error);\r\n                this.errorMessage = \"Failed to login\";\r\n            });\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { AppComponent } from './app.component';\r\nimport ProductListView from './views/productListView.component';\r\nimport { Store } from './services/store.service';\r\nimport { CartView } from './views/cartView.component';\r\nimport router from './router';\r\nimport { ShopPage } from './pages/shopPage.component';\r\nimport { CheckoutPage } from './pages/checkout.component';\r\nimport { LoginPage } from './pages/loginPage.component';\r\nimport { AuthActivator } from './services/authActivator.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport ProductDetail from './pages/productDetail.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n        AppComponent,\r\n        ProductListView,\r\n        ProductDetail,\r\n        CartView,\r\n        ShopPage,\r\n        CheckoutPage,\r\n        LoginPage,\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      router,\r\n      FormsModule\r\n  ],\r\n  providers: [Store, AuthActivator],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<div class=\"row\">\n    <h3>Confirm Order</h3>\n    <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\n    <table class=\"table table-bordered table-hover\">\n        <tr *ngFor=\"let o of store.order.items\">\n            <td><img src=\"/img/{{ o.productArtId }}.jpg\" alt=\"o.productTitle\" class=\"img-thumbnail checkout-thumb\" /></td>\n            <td>{{ o.productCategory }}: {{ o.productTitle }}</td>\n            <td>{{ o.quantity }}</td>\n            <td>{{ o.unitPrice | currency }}</td>\n            <td>{{ (o.unitPrice * o.quantity) | currency }}</td>\n        </tr>\n    </table>\n    <div class=\"col-md-4 col-md-offset-8 text-right\">\n        <table class=\"table table-condensed\">\n            <tr>\n                <td class=\"text-right\">Subtotal</td>\n                <td class=\"text-right\">{{ store.order.subtotal | currency }}</td>\n            </tr>\n            <tr>\n                <td class=\"text-right\">Shipping</td>\n                <td class=\"text-right\">$ 0.00</td>\n            </tr>\n            <tr>\n                <td class=\"text-right\">Total:</td>\n                <td class=\"text-right\">{{ store.order.subtotal | currency }}</td>\n            </tr>\n        </table>\n        <button class=\"btn btn-success\" (click)=\"onCheckout()\">Complete Purchase</button>\n        <a routerLink=\"/\" class=\"btn btn-info\">Cancel</a>\n    </div>\n\n</div>","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Store } from \"../services/store.service\";\n\n@Component({\n    selector: \"checkout\",\n    templateUrl: \"checkout.component.html\",\n    styleUrls: ['checkout.component.css']\n})\nexport class CheckoutPage {\n\n    public errorMessage = \"\";\n\n    constructor(public store: Store, private router: Router) {\n    }\n\n    onCheckout() {\n        this.errorMessage = \"\";\n        this.store.checkout()\n            .subscribe(() => {\n                this.router.navigate([\"/\"]);\n            }, err => {\n                this.errorMessage = `Failed to checkout: ${err}`;\n            })\n    }\n}","import { RouterModule } from \"@angular/router\";\r\nimport { CheckoutPage } from \"../pages/checkout.component\";\r\nimport { ShopPage } from \"../pages/shopPage.component\";\r\nimport { LoginPage } from \"../pages/loginPage.component\";\r\nimport { AuthActivator } from \"../services/authActivator.service\";\r\nimport ProductDetail from \"../pages/productDetail.component\";\r\n\r\nconst routes = [\r\n    { path: \"\", component: ShopPage },\r\n    { path: \"checkout\", component: CheckoutPage, canActivate: [AuthActivator] },\r\n    { path: \"login\", component: LoginPage },\r\n    { path: \"product/:id\", component: ProductDetail }, \r\n    { path: \"**\", redirectTo: \"/\"}\r\n];\r\n\r\nconst router = RouterModule.forRoot(routes, {\r\n    useHash: false\r\n});\r\n\r\nexport default router;","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"shop-page\",\r\n    templateUrl: \"shopPage.component.html\"\r\n})\r\nexport class ShopPage {\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-9\">\r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <cart></cart>\r\n    </div>\r\n</div>","export class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productTitle: string;\r\n    productArtId: string;\r\n}\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string = Math.random().toString(36).substr(2, 5);\r\n    items: OrderItem[] = [];\r\n    get subtotal(): number {\r\n        const result = this.items.reduce(\r\n            (tot, val) => {\r\n                return tot + (val.unitPrice * val.quantity);\r\n            }, 0);\r\n        return result;\r\n    }\r\n}","<h3>Cart</h3>\r\n<div>Count: {{ store.order.items.length }}</div>\r\n<table class=\"table table-condensed table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <th></th>\r\n            <th>Product</th>\r\n            <th>Quantity</th>\r\n            <th>Price</th>\r\n            <th>Total</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let item of store.order.items\">\r\n            <td>\r\n                <img src=\"/img/{{ item.productArtId}}.jpg\" alt=\"{{ item.productTitle}}\" class=\"img-fluid product-thumb\" />\r\n            </td>\r\n            <td>{{ item.productCategory }}</td>\r\n            <td>\r\n                <button class=\"btn btn-sm btn-primary\" (click)=\"store.decreaseQuantity(item)\">-</button>\r\n                <button class=\"btn btn-sm btn-primary\" (click)=\"store.increaseQuantity(item)\">+</button>\r\n            </td>\r\n            <td>{{ item.quantity }}</td>\r\n            <td>{{ item.unitPrice | currency }}</td>\r\n            <td>{{ item.unitPrice * item.quantity | currency }}</td>\r\n        </tr>\r\n    </tbody>\r\n    <tfoot>\r\n        <td colspan=\"5\"><strong>Subtotal: {{ store.order.subtotal | currency }}</strong></td>\r\n    </tfoot>\r\n</table>\r\n<a class=\"btn btn-success\" *ngIf=\"store.order.items.length > 0\" routerLink=\"checkout\">Checkout</a>\r\n<hr/>","import { Component } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n    selector: \"cart\",\r\n    templateUrl: \"cartView.component.html\",\r\n    styleUrls: [ \"cartView.component.css\" ]\r\n})\r\nexport class CartView {\r\n    constructor(public store: Store) {\r\n\r\n    }\r\n}","<div class=\"row\">\r\n    <div *ngFor=\"let p of store.products\" class=\"col-md-4\">\r\n        <div class=\"border bg-light rounded p-1\">\r\n            <div class=\"border bg-light rounded p-1\">\r\n                <!-- Sử dụng ảnh đầu tiên của sản phẩm nếu có -->\r\n                <img *ngIf=\"p.img.length > 0\" src=\"{{p.img[0].urlImage}}\" class=\"img-fluid product-image\" alt=\"{{p.name}}\" />\r\n                <!-- Nếu không có ảnh, bạn có thể thêm một hình ảnh mặc định hoặc ẩn phần ảnh này -->\r\n                <!-- <img src=\"/img/default.jpg\" class=\"img-fluid product-image\" alt=\"{{p.name}}\" /> --> \r\n                <h5>{{p.category.name}}</h5>\r\n                <ul class=\"product-props\">\r\n                    <li>Title: {{p.name}}</li>\r\n                    <li>{{p.description}}</li>\r\n                </ul>\r\n                <a [routerLink]=\"['/product', p.id]\">Xem chi tiết</a>\r\n                <button id=\"buyButton\" class=\"btn btn-success\" (click)=\"store.addToOrder(p)\">Buy</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\nimport { Product } from \"../shared/Product\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productListView.component.html\",\r\n    styleUrls: [\"productListView.component.css\"]\r\n})\r\nexport default class ProductListView implements OnInit{\r\n\r\n    constructor(public store: Store) {\r\n    }\r\n    ngOnInit(): void {\r\n        this.store.loadProducts().subscribe(() => {\r\n            //do something\r\n        });\r\n    }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}